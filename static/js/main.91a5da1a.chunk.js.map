{"version":3,"sources":["Components/BarDisplay.js","Components/Button.js","logic/operate.js","Components/Calculator.js","logic/calculate.js","Components/NavBar.js","Components/Home.js","Components/Quote.js","App.js","index.js"],"names":["BarDisplay","props","render","content","className","role","state","React","Component","Button","clickHandler","e","txt","target","firstChild","textContent","calculate","setCalculate","parseStringOp","str","op","str1","i","length","push","tmp","replace","split","this","width","text","color","styles","backgroundColor","style","onClick","tabIndex","onKeyPress","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","compute","setCompute","a","obj","buttonName","total","next","match","includes","parseFloat","Calculator","useState","forEach","signe","key","addButton","NavBar","to","exact","Home","margin","textAlign","fontSize","marginTop","Quote","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91a5da1a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class BarDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render = () => {\n    const { content } = this.props;\n    return (\n      <div className=\"bar-display\">\n        <div className=\"writting\" role=\"none\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\nBarDisplay.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  clickHandler = (e) => {\n    const txt = e.target.firstChild.textContent;\n    const { content, calculate, setCalculate } = this.props;\n    content(txt, calculate, setCalculate);\n  }\n\n  parseStringOp = (str) => {\n    const op = [];\n    const str1 = [...str];\n    // we get the opration in order and get numbers\n    for (let i = 0; i < str1.length; i += 1) {\n      if (str1[i] === '+') op.push('+');\n      if (str1[i] === '-') op.push('-');\n      if (str1[i] === '÷') op.push('÷');\n      if (str1[i] === 'x') op.push('x');\n      if (str1[i] === '%') op.push('%');\n    }\n\n    const reg = /[+\\-÷x%]/ig;\n    let tmp = str.replace(reg, ' ');\n    tmp = tmp.split(' ');\n    return tmp;\n  }\n\n  render() {\n    const { width, text, color } = this.props;\n    const styles = { backgroundColor: `${color}`, width: `${width}` };\n    return (\n      <div style={styles} className=\"button\" onClick={this.clickHandler} role=\"button\" tabIndex=\"0\" onKeyPress={this.clickHandler}>\n        <span className=\"text\">{text}</span>\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  width: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  content: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  calculate: PropTypes.object.isRequired,\n  setCalculate: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === '÷') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport BarDisplay from './BarDisplay';\nimport Button from './Button';\nimport calculate from '../logic/calculate';\n\nconst clickHandler = async (txt, compute, setCompute) => {\n  setCompute(calculate(compute, txt));\n};\n\nconst addButton = (compute, setCompute) => {\n  const tab = ['AC', '+/-', '%', '÷', '7', '8', '9', 'x', '4', '5', '6', '-', '1', '2', '3', '+', '0', '.', '='];\n  const tmp = [];\n  let i = 0;\n  tab.forEach((signe) => {\n    if (signe === '+' || signe === '=' || signe === '-' || signe === '÷' || signe === 'x') tmp.push(<Button key={i} calculate={compute} setCalculate={setCompute} content={clickHandler} width=\"73px\" color=\"#F4924B\" text={signe} />);\n    else if (signe === '0') tmp.push(<Button calculate={compute} setCalculate={setCompute} key={i} content={clickHandler} width=\"148px\" color=\"#E0E0E0\" text={signe} />);\n    else tmp.push(<Button key={i} calculate={compute} setCalculate={setCompute} content={clickHandler} width=\"73px\" color=\"#E0E0E0\" text={signe} />);\n    i += 1;\n  });\n  return tmp;\n};\nconst Calculator = () => {\n  const init = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n  const [compute, setCompute] = useState(init);\n  const { next, total } = compute;\n  const tmp = next || total || 0;\n  return (\n    <div className=\"section-calc\">\n      <div>\n        <h1>Let &lsquo Do some math !</h1>\n      </div>\n      <div className=\"calculator\">\n        <BarDisplay content={`${tmp}`} />\n        {addButton(compute, setCompute)}\n      </div>\n    </div>\n\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function NavBar() {\n  return (\n    <div className=\"navbar\">\n      <div className=\"title\">\n        <h1>Math Magicians</h1>\n      </div>\n      <div className=\"link\">\n        <ul>\n          <li>\n            <NavLink to=\"/\" exact>Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/calc\" exact>Calculator</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/quote\" exact>Quote</NavLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Home() {\n  return (\n    <div style={{\n      width: '75%', margin: 'auto', textAlign: 'center', fontSize: 19, marginTop: '5%',\n    }}\n    >\n      <h1>Welcome to our page</h1>\n      <p style={{ textAlign: 'start' }}>\n        Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n        Lorem Ipsum has been the industry&lsquo s standard dummy text ever since the 1500s,\n        when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n        It has survived not only five centuries, but also the leap into electronic typesetting,\n        remaining essentially unchanged. It was popularised in the 1960s\n        with the release of Letraset\n        sheets\n        containing Lorem Ipsum passages, and more recently with\n        desktop publishing software like Aldus\n        PageMaker including versions of Lorem Ipsum.\n      </p>\n      <p style={{ textAlign: 'start' }}>\n        It is a long established fact that a reader will be distracted by\n        the readable content of\n        a page when looking at its layout. The point of using\n        Lorem Ipsum is that it has a more-or-less\n        normal distribution of letters, as opposed to using\n        Content here, content here, making it look\n        like readable English. Many desktop publishing packages\n        and web page editors now use Lorem Ipsum\n        as their default model text, and a search for\n        lorem ipsum will uncover many web sites still in\n        their infancy. Various versions have evolved over\n        the years, sometimes by accident, sometimes on\n        purpose (injected humour and the like).\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Quote() {\n  return (\n    <div style={{\n      width: '70%', margin: 'auto', textAlign: 'center', fontSize: 19, marginTop: '5%',\n    }}\n    >\n      <p>\n        Mathematics is about numbers, equations, computations\n        <br />\n        or algorithms: it is about understanding. -William Paul Thurston\n      </p>\n    </div>\n  );\n}\n","import './css/App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Calculator from './Components/Calculator';\nimport NavBar from './Components/NavBar';\nimport Home from './Components/Home';\nimport Quote from './Components/Quote';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/calc\">\n            <Calculator />\n          </Route>\n          <Route path=\"/quote\">\n            <Quote />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}